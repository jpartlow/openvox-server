---
name: Beaker Acceptance Tests
run-name: |-
  Beaker acceptance tests for openvox-server using
  ${{ inputs.pre-release-build && 'pre-release' || 'release' }}
  packages of openvox-agent
  ${{ (inputs.pre-release-build && inputs.openvox-agent-version) ||
      format(' collection: "{0}", version: "{1}" ',
             inputs.collection,
             ((inputs.openvox-agent-version == '') && 'latest') ||
              inputs.openvox-agent-version) }}
  , openvox-server
  ${{ (inputs.pre-release-build && inputs.openvox-server-version) ||
      format(' collection: "{0}", version: "{1}" ',
             inputs.collection,
             ((inputs.openvox-server-version == '') && 'latest') ||
              inputs.openvox-server-version) }}
  and openvoxdb
  ${{ (inputs.pre-release-build && inputs.openvoxdb-version) ||
      format(' collection: "{0}", version: "{1}" ',
             inputs.collection,
             ((inputs.openvoxdb-version == '') && 'latest') ||
              inputs.openvoxdb-version) }}

on:
  workflow_dispatch:
    inputs:
      ref:
        description: |-
          (Ref) The git ref of openvox-server to run the Beaker test
          suite from.

          If testing something from openvox8, this should be a ref off
          of main.

          If testing something from openvox7, this should be a ref off
          of the 7.x branch.
        required: true
        type: string
        default: main
      pre-release-build:
        description: |-
          (Pre-release Build) Whether to test unreleased version
          packages from the artifacts server, or released packages
          from the given collection.

          If this is true, versions must be valid version numbers,
          not latest, and collection is ignored. The workflow will
          download and install the matching openvox package files
          from the artifacts-url server.

          If this is false, version and collection must match, and the
          workflow will install the given openvox collection package
          and then let the system package manager install the latest
          or version packages from the collection repository.
        default: true
        type: boolean
      openvox-agent-version:
        description: |-
          (OpenVox Agent Version) The openvox-agent package version to
          test. (required if Pre-release Build is true)
        type: string
      openvox-server-version:
        description: |-
          (OpenVox Server Version) The openvox-server package version
          to test. (required if Pre-release Build is true)
        type: string
      openvoxdb-version:
        description: |-
          (OpenVoxDB Version) The openvoxdb package version
          to test. (required if Pre-release Build is true)
        type: string
      collection:
        description: |-
          (Collection) OpenVox collection to use. (ignored if
          Pre-release Build is true)

          If testing something from main, this should be openvox8.
          If testing something from 7.x, this should be openvox7.
        default: 'openvox8'
        type: string
      artifacts-url:
        description: |-
          URL to the artifacts server. (used if Pre-release Build is
          true)
        default: 'https://s3.osuosl.org/openvox-artifacts'
        type: string
      fork:
        description: |-
          The github fork of the project-name Beaker test suite to run.
        required: true
        type: string
        default: openvoxproject

permissions:
  contents: read

jobs:
  acceptance:
    uses: 'openvoxproject/shared-actions/.github/workflows/beaker_acceptance.yml@main'
    with:
      ref: ${{ inputs.ref }}
      project-name: openvox-server
      fork: ${{ inputs.fork }}
      openvox-collection: ${{ inputs.collection }}
      openvox-agent-version: ${{ inputs.openvox-agent-version }}
      openvox-agent-pre-release-build: ${{ inputs.pre-release-build }}
      openvox-server-version: ${{ inputs.openvox-server-version }}
      openvox-server-pre-release-build: ${{ inputs.pre-release-build }}
      openvoxdb-version: ${{ inputs.openvoxdb-version }}
      openvoxdb-pre-release-build: ${{ inputs.pre-release-build }}
      artifacts-url: ${{ inputs.artifacts-url }}
